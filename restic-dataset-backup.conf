###############################################################################
# Define your variables here
###############################################################################

#
# ZFS
#

# zfs dataset to backup
DATASET="tank/dataset"

#
# RESTIC
#

# restic repository
# Examples:
# SFTP on Hetzner Storage Box: "sftp://xyz@xyz.your-storagebox.de:23/restic-repo"
# S3 on Wasabi: "s3:https://s3.eu-central-1.wasabisys.com/example.com-restic-repo"
# Connect to rclone's restic REST backend: "rclone:restic-repo" (see https://rclone.org/commands/rclone_serve_restic/)
RESTIC_REPOSITORY=""
# password of restic repo
RESTIC_PASSWORD=""

#
# HEALTHCHECKS.IO
#

# Healthchecks.io ping url
HC_URL="https://hc-ping.com/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"

#
# KEEP
#

# which snapshots should be kept?
# see https://restic.readthedocs.io/en/latest/060_forget.html
# comment out or set to "" to keep all
KEEP_WITHIN="1m"
KEEP_MONTHLY="7"

#
# S3 STORAGE (optional, must be set if S3 storage is used)
#

# S3 keys
AWS_ACCESS_KEY_ID="none"
AWS_SECRET_ACCESS_KEY="none"

#
# RCLONE (optional, must be set if connection to rclone is made, see https://rclone.org/commands/rclone_serve_restic/)
#

# sets the rclone location:
# Examples:
# * Use rclone from $PATH: "rclone"
# * Specify a local path to rclone: "/opt/local/bin/rclone"
# * Execute rclone on the remote server via ssh:
#   * For a remote server "ssh xyz@example.com rclone serve restic --stdio"
#   * For a Hetzner Storage Box use "ssh -p 23 xyz@xyz.your-storagebox.de rclone"
RCLONE_PROGRAM="rclone"

###############################################################################
# End of user defined variables
###############################################################################
